{"version":3,"sources":["pages/Home.js","pages/Admin.js","pages/helpers.js","pages/Service.js","UserContext.js","App.js","reportWebVitals.js","index.js"],"names":["servicesQuery","gql","overallQuery","Home","data","useQuery","Row","className","Col","services","map","service","i","SiteRow","first","last","length","id","Overall","uptime1","toFixed","uptime7","uptime30","uptime90","getColor","value","color","name","uptimeDays","values","r","uptime","avg","reduce","p","c","classnames","href","style","xs","Tick","day","props","OverlayTrigger","placement","overlay","Tooltip","servicesMutation","Admin","useMutation","mutate","Form","inline","onSubmit","e","variables","serialize","target","hash","interval","parseFloat","timeout","then","result","toast","success","createService","reset","catch","err","console","log","error","message","autoclose","preventDefault","persist","md","Group","Label","Control","type","required","min","defaultValue","Button","serviceQuery","ResponseTime","border","response","max","UserContext","createContext","routes","httpLink","HttpLink","uri","authLink","ApolloLink","operation","forward","token","Cookies","get","setContext","headers","authorization","client","ApolloClient","cache","InMemoryCache","link","from","App","routeResult","useRoutes","newestOnTop","Container","title","ReactHtmlParser","footer","AppWrapper","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.983f3a3d.chunk.js","sourcesContent":["import { gql, useQuery } from '@apollo/client'\nimport classnames from 'classnames'\nimport { Col, Row, OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { A } from 'hookrouter'\n\nconst servicesQuery = gql`\n  query Services {\n    services {\n      id\n      name\n      url\n      order\n\n      uptimeDays(days: 90) {\n        day\n        uptime\n      }\n    }\n  }\n`\n\nconst overallQuery = gql`\n  query Overall {\n    uptime1: uptime(days: 1)\n    uptime7: uptime(days: 7)\n    uptime30: uptime(days: 30)\n    uptime90: uptime(days: 90)\n  }\n`\n\nexport default function Home () {\n  const { data } = useQuery(servicesQuery)\n\n  return (\n    <>\n      <Row><h4>Services</h4></Row>\n      <Row className='mainBox'>\n        <Col>\n          {data && data.services.map((service, i) => (\n            <SiteRow key={service.id} service={service} first={i === 0} last={i === data.services.length - 1} />\n          ))}\n        </Col>\n      </Row>\n\n      <Overall />\n    </>\n  )\n}\n\nfunction Overall () {\n  const { data } = useQuery(overallQuery)\n\n  return (\n    <>\n      <Row><h4 className='mt-5'>Overall Uptime</h4></Row>\n      <Row className='mainBox overall'>\n        <Col>\n          <Row className='number'>\n            <Col>\n              {data && data.uptime1.toFixed(3)}%\n            </Col>\n          </Row>\n          <Row className='title'>\n            <Col>\n              Last 24 hours\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Row className='number'>\n            <Col>\n              {data && data.uptime7.toFixed(3)}\n            </Col>\n          </Row>\n          <Row className='title'>\n            <Col>\n              Last 7 days\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Row className='number'>\n            <Col>\n              {data && data.uptime30.toFixed(3)}\n            </Col>\n          </Row>\n          <Row className='title'>\n            <Col>\n              Last 30 days\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Row className='number'>\n            <Col>\n              {data && data.uptime90.toFixed(3)}\n            </Col>\n          </Row>\n          <Row className='title'>\n            <Col>\n              Last 90 days\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nfunction getColor (value) {\n  let color = ''\n\n  if (value !== null) {\n    color = 'green'\n    if (value < 99) color = 'lightgreen'\n    if (value < 95) color = 'yellow'\n    if (value < 90) color = 'red'\n  }\n  return color\n}\n\nfunction SiteRow ({ first, last, service }) {\n  const { name, uptimeDays } = service\n\n  const values = uptimeDays.map(r => r.uptime)\n  const avg = values.reduce((p, c) => p + c, 0) / values.length\n\n  return (\n    <Row className={classnames('infoRow', { first, 'pt-4': !first, 'pb-4': !last })}>\n      <Col>\n        <Row className='info'>\n          <Col className='pl-0'>\n            <A href={`/service/${service.id}`}><span style={{ color: 'white' }}>{name}</span></A>\n            <span className='mx-1'>|</span>\n            <span className={getColor(avg)}>{avg.toFixed(2)}%</span>\n          </Col>\n          <Col xs='auto pr-0 lightgreen'>\n            <span>Operational</span>\n          </Col>\n        </Row>\n        <Row className='flex-nowrap mt-3 justify-content-end'>\n          {uptimeDays.map(r => <Tick key={r.day} day={r.day} value={r.uptime} />)}\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nfunction Tick (props) {\n  const value = props.value\n  const color = getColor(value)\n\n  return (\n    <OverlayTrigger\n      placement='top'\n      overlay={\n        <Tooltip>\n          {props.day}\n          <br />\n          {value.toFixed(2)}%\n        </Tooltip>\n      }\n    >\n      <Col className='tick px-0'>\n        <div className={color} />\n      </Col>\n    </OverlayTrigger>\n  )\n}\n","\nimport { useMutation, gql } from '@apollo/client'\nimport { toast } from 'react-toastify'\nimport { Col, Form, Button } from 'react-bootstrap'\nimport serialize from 'form-serialize'\n\nconst servicesMutation = gql`\n  mutation createService($name: String!, $url: String!, $interval: Float!, $timeout: Float!) {\n    createService(name: $name, url: $url, interval: $interval, timeout: $timeout){\n      name\n    }\n  }\n`\n\nexport default function Admin () {\n  const [mutate] = useMutation(servicesMutation)\n  function handleSubmitForm (e) {\n    const variables = serialize(e.target, { hash: true })\n    variables.interval = parseFloat(variables.interval)\n    variables.timeout = parseFloat(variables.timeout)\n\n    mutate({ variables }).then(result => {\n      toast.success(`Added service \"${result.data.createService.name}\" succesfully!`)\n      e.target.reset()\n    }).catch(err => {\n      console.log(err)\n      toast.error(err.message, { autoclose: false })\n    })\n\n    e.preventDefault()\n    e.persist()\n  }\n\n  return (\n    <Form inline className='mainBox p-4' onSubmit={handleSubmitForm}>\n      <Form.Row className='w-100 pb-3'>\n        <Col xs='12' md='auto'>\n          <Form.Group>\n            <Form.Label className='mr-2'>Name:</Form.Label>\n            <Form.Control type='text' name='name' required />\n          </Form.Group>\n        </Col>\n        <Col xs='12' md='auto'>\n          <Form.Group>\n            <Form.Label className='mr-2'>Url:</Form.Label>\n            <Form.Control type='text' name='url' required />\n          </Form.Group>\n        </Col>\n      </Form.Row>\n\n      <Form.Row className='w-100 pb-3'>\n        <Col xs='12' md='auto'>\n          <Form.Group>\n            <Form.Label className='mr-2'>Interval:</Form.Label>\n            <Form.Control type='number' min={0} defaultValue={5000} name='interval' required />\n          </Form.Group>\n        </Col>\n        <Col xs='12' md='auto'>\n          <Form.Group>\n            <Form.Label className='mr-2'>Timeout:</Form.Label>\n            <Form.Control type='number' min={0} defaultValue={3000} name='timeout' required />\n          </Form.Group>\n        </Col>\n        <Col xs='auto'>\n          <Button type='submit'>\n            Add Service\n          </Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  )\n}\n","export default function getColor (value) {\n  let color = ''\n\n  if (value !== null) {\n    color = 'green'\n    if (value < 99) color = 'lightgreen'\n    if (value < 95) color = 'yellow'\n    if (value < 90) color = 'red'\n  }\n  return color\n}\n","import { gql, useQuery } from '@apollo/client'\nimport classnames from 'classnames'\nimport { Col, Row, OverlayTrigger, Tooltip } from 'react-bootstrap'\n// import { A } from 'hookrouter'\n\nimport getColor from './helpers'\n\nconst serviceQuery = gql`\n  query Services($id: ID!) {\n    service(id: $id) {\n      id\n      name\n      url\n      order\n\n      uptimeDays(days: 90) {\n        day\n        uptime\n      }\n\n      uptime1: uptime(days: 1)\n      uptime7: uptime(days: 7)\n      uptime30: uptime(days: 30)\n      uptime90: uptime(days: 90)\n\n      response: responseTime(days: 2){\n        avg\n        min\n        max\n      }\n    }\n  }\n`\n\nexport default function Home (props) {\n  const { data } = useQuery(serviceQuery, { variables: { id: props.id } })\n\n  return (\n    <>\n      <h4>Uptime Last 90 days</h4>\n      <Row className='mainBox'>\n        <Col>\n          {data && <SiteRow key={data.service.id} service={data.service} first last />}\n        </Col>\n      </Row>\n\n      <Overall data={data} />\n      <ResponseTime data={data} />\n    </>\n  )\n}\n\nfunction Overall (props) {\n  const { data } = props\n\n  return (\n    <>\n      <h4 className='mt-5'>Overall Uptime</h4>\n      <Row className='mainBox overall'>\n        <Col>\n          <Row className='number'>\n            <Col>\n              {data && data.service.uptime1.toFixed(3)}%\n            </Col>\n          </Row>\n          <Row className='title'>\n            <Col>\n              Last 24 hours\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Row className='number'>\n            <Col>\n              {data && data.service.uptime7.toFixed(3)}%\n            </Col>\n          </Row>\n          <Row className='title'>\n            <Col>\n              Last 7 days\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Row className='number'>\n            <Col>\n              {data && data.service.uptime30.toFixed(3)}%\n            </Col>\n          </Row>\n          <Row className='title'>\n            <Col>\n              Last 30 days\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Row className='number'>\n            <Col>\n              {data && data.service.uptime90.toFixed(3)}%\n            </Col>\n          </Row>\n          <Row className='title'>\n            <Col>\n              Last 90 days\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nfunction ResponseTime (props) {\n  const { data } = props\n  return (\n    <>\n      <h4 className='mt-5'>Response Time Last 2 days </h4>\n      <Row className='mainBox overall'>\n        <Col style={{ border: 'none' }}>\n          <Row>\n            <Col>\n              <Row className='number'>\n                <Col>\n                  {data && data.service.response.avg.toFixed(2)}ms\n                </Col>\n              </Row>\n              <Row className='title'>\n                <Col>\n                  Avg. response time\n                </Col>\n              </Row>\n            </Col>\n            <Col>\n              <Row className='number'>\n                <Col>\n                  {data && data.service.response.max.toFixed(2)}ms\n                </Col>\n              </Row>\n              <Row className='title'>\n                <Col>\n                  Max. response time\n                </Col>\n              </Row>\n            </Col>\n            <Col>\n              <Row className='number'>\n                <Col>\n                  {data && data.service.response.min.toFixed(2)}ms\n                </Col>\n              </Row>\n              <Row className='title'>\n                <Col>\n                  Min. response time\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nfunction SiteRow ({ first, last, service }) {\n  const { uptimeDays } = service\n\n  const values = uptimeDays.map(r => r.uptime)\n  const avg = values.reduce((p, c) => p + c, 0) / values.length\n\n  return (\n    <Row className={classnames('infoRow', { first, 'pt-4': !first, 'pb-4': !last })}>\n      <Col>\n        <Row className='info'>\n          <Col className='pl-0'>\n            <span className={getColor(avg)}>{avg.toFixed(2)}%</span>\n          </Col>\n        </Row>\n        <Row className='flex-nowrap mt-3 justify-content-end'>\n          {uptimeDays.map(r => <Tick key={r.day} day={r.day} value={r.uptime} />)}\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nfunction Tick (props) {\n  const value = props.value\n  const color = getColor(value)\n\n  return (\n    <OverlayTrigger\n      placement='top'\n      overlay={\n        <Tooltip>\n          {props.day}\n          <br />\n          {value.toFixed(2)}%\n        </Tooltip>\n      }\n    >\n      <Col className='tick px-0'>\n        <div className={color} />\n      </Col>\n    </OverlayTrigger>\n  )\n}\n","import { createContext } from 'react'\nconst UserContext = createContext()\nexport default UserContext\n","\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport './css/global.scss'\n\nimport ReactHtmlParser from 'react-html-parser'\nimport { useRoutes } from 'hookrouter'\nimport { ToastContainer } from 'react-toastify'\nimport Cookies from 'js-cookie'\nimport { HttpLink, ApolloLink, ApolloProvider, ApolloClient, InMemoryCache, from, useQuery, gql } from '@apollo/client'\n\nimport Home from './pages/Home'\nimport Admin from './pages/Admin'\nimport Service from './pages/Service'\n\nimport UserContext from './UserContext'\nimport { Container, Row } from 'react-bootstrap'\n\nconst routes = {\n  '/': () => <Home />,\n  '/service/:id': ({ id }) => <Service id={id} />,\n  '/admin': () => <Admin />\n}\n\nconst httpLink = new HttpLink({ uri: '/api' })\nconst authLink = new ApolloLink((operation, forward) => {\n  const token = Cookies.get('token')\n  if (token) operation.setContext({ headers: { authorization: token } })\n\n  return forward(operation)\n})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: from([authLink, httpLink])\n})\n\nfunction AppWrapper () {\n  const context = { }\n\n  return (\n    <ApolloProvider client={client}>\n      <UserContext.Provider value={context}>\n        <App />\n      </UserContext.Provider>\n    </ApolloProvider>\n  )\n}\n\nfunction App () {\n  const { data } = useQuery(gql`query Title{ \n    title \n    footer\n  }`)\n  const routeResult = useRoutes(routes)\n\n  console.log(data)\n\n  return (\n    <>\n      <ToastContainer newestOnTop />\n      <Container>\n        <Row className='my-4 py-2'>\n          <h1 className='title'>{data ? data.title : ''}</h1>\n        </Row>\n        {routeResult || <div />}\n        {data && ReactHtmlParser(data.footer)}\n      </Container>\n    </>\n  )\n}\n\nexport default AppWrapper\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}